openapi: 3.0.3
info:
  title: Kubernetes Region Service API
  description: |-
    Cloud region discovery and routing service.
  version: 0.1.1
paths:
  /api/v1/organizations/{organizationID}/projects/{projectID}/regions:
    description: |-
      Regions define a cloud.  This may be geographical or any logical partition.
      Either way this is the primitive that is used to associate metadata such as
      geographical locale, an organisation's reserved blob of compute etc.
      Each region has its own provider associated with it, for example OpenStack, and
      its own set of credentials so things can be scoped to a specific slice of a
      shared cloud through whatever mechanism is available on that cloud provider.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/projectIDParameter'
    get:
      description: |-
        List all regions.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/regionsResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/projects/{projectID}/regions/{regionID}/flavors:
    description: Compute flavor services.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/projectIDParameter'
    - $ref: '#/components/parameters/regionIDParameter'
    get:
      description: |-
        Lists all compute flavors that the authenticated user has access to
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/flavorsResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/projects/{projectID}/regions/{regionID}/images:
    description: Compute image services.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/projectIDParameter'
    - $ref: '#/components/parameters/regionIDParameter'
    get:
      description: |-
        Lists all compute images that the authenticated user has access to.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/imagesResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/projects/{projectID}/regions/{regionID}/identities:
    description: |-
      Managed identity services.  Identities should be single use e.g. a single cluster instance.
      This limits blast radius in the event of a credential leak, or in some cases avoids bugs in
      provisioning software.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/projectIDParameter'
    - $ref: '#/components/parameters/regionIDParameter'
    post:
      description: Create a new identity in the region.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/identityRequest'
      responses:
        '201':
          $ref: '#/components/responses/identityResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/projects/{projectID}/regions/{regionID}/externalnetworks:
    description: |-
      Allows access to "external networks" for providers that support them.
      While CAPO can infer the external network itself, it craps out -
      as per usual - if more than one is found, wracked with indescision.
      Thus we still need to handle it as a special snowflake.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/projectIDParameter'
    - $ref: '#/components/parameters/regionIDParameter'
    get:
      description: Get a list of external networks.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/externalNetworksResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
components:
  parameters:
    organizationIDParameter:
      name: organizationID
      in: path
      description: An organization ID.
      required: true
      schema:
        type: string
    projectIDParameter:
      name: projectID
      in: path
      description: |-
        The project name.
      required: true
      schema:
        $ref: '#/components/schemas/kubernetesNameParameter'
    regionIDParameter:
      name: regionID
      in: path
      description: The region identifier.
      required: true
      schema:
        $ref: '#/components/schemas/kubernetesNameParameter'
    identityIDParameter:
      name: identityID
      in: path
      description: The identity identifier.
      required: true
      schema:
        $ref: '#/components/schemas/kubernetesNameParameter'
  schemas:
    kubernetesNameParameter:
      description: A Kubernetes name. Must be a valid DNS containing only lower case characters, numbers or hyphens, start and end with a character or number, and be at most 63 characters in length.
      type: string
      minLength: 1
      maxLength: 63
    regionType:
      description: The region's provider type.
      type: string
      enum:
      - openstack
    regionSpec:
      description: Information about the region.
      type: object
      required:
      - type
      properties:
        type:
          $ref: '#/components/schemas/regionType'
    regionRead:
      description: A region.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/resourceReadMetadata'
        spec:
          $ref: '#/components/schemas/regionSpec'
    regions:
      description: A list of regions.
      type: array
      items:
        $ref: '#/components/schemas/regionRead'
    softwareVersions:
      description: Image preinstalled version version metadata.
      type: object
      properties:
        kubernetes:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/semver'
    gpuVendor:
      description: The GPU vendor.
      type: string
      enum:
      - nvidia
      - amd
    gpuDriver:
      description: The GPU driver if installed.
      type: object
      required:
      - vendor
      - version
      properties:
        vendor:
          $ref: '#/components/schemas/gpuVendor'
        version:
          description: The GPU driver version, this is vendor specific.
          type: string
    imageSpec:
      description: An image.
      type: object
      properties:
        softwareVersions:
          $ref: '#/components/schemas/softwareVersions'
        gpuDriver:
          $ref: '#/components/schemas/gpuDriver'
    image:
      description: An image.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          type: string
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/staticResourceMetadata'
        spec:
          type: string
          $ref: '#/components/schemas/imageSpec'
    images:
      description: A list of images that are compatible with this platform.
      type: array
      items:
        $ref: '#/components/schemas/image'
    gpuSpec:
      description: GPU specification.
      type: object
      required:
      - vendor
      - model
      - count
      properties:
        vendor:
          $ref: '#/components/schemas/gpuVendor'
        model:
          description: A GPU model.
          type: string
        count:
          description: The number of GPUs available.
          type: integer
    flavorSpec:
      description: A flavor.
      type: object
      required:
      - cpus
      - memory
      - disk
      properties:
        cpus:
          description: The number of CPUs.
          type: integer
        memory:
          description: The amount of memory in GiB.
          type: integer
        disk:
          description: The amount of ephemeral disk in GB.
          type: integer
        gpu:
          $ref: '#/components/schemas/gpuSpec'
    flavor:
      description: A flavor.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/staticResourceMetadata'
        spec:
          $ref: '#/components/schemas/flavorSpec'
    flavors:
      description: A list of flavors.
      type: array
      items:
        $ref: '#/components/schemas/flavor'
    identityWrite:
      description: Request parameters for creating an identity.
      type: object
      required:
      - clusterId
      properties:
        clusterId:
          description: Cluster the owns the resource.
          type: string
    identitySpecOpenStack:
      description: Everything an OpenStack client needs to function.
      type: object
      required:
      - cloud
      - cloudConfig
      - userId
      - projectId
      properties:
        cloud:
          description: The name of the cloud in the cloud config.
          type: string
        cloudConfig:
          description: A base64 encoded cloud config file.
          type: string
        userId:
          description: User identitifer allocated for the infrastructure.
          type: string
        projectId:
          description: Project identifier allocated for the infrastructure.
          type: string
    identitySpec:
      description: |-
        A provider specific identity, while the client can list regions to infer the
        type, we don't requires this and return it with the response.  That can then
        be used in turn to determine which provider specification to examine.
      type: object
      required:
      - type
      properties:
        type:
          $ref: '#/components/schemas/regionType'
        openstack:
          $ref: '#/components/schemas/identitySpecOpenStack'
    identityRead:
      description: A provider specific identity.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/projectScopedResourceReadMetadata'
        spec:
          $ref: '#/components/schemas/identitySpec'
    externalNetwork:
      description: An Openstack external network.
      type: object
      required:
      - id
      - name
      properties:
        id:
          description: The resource ID.
          type: string
        name:
          description: The resource name.
          type: string
    externalNetworks:
      description: A list of openstack external networks.
      type: array
      items:
        $ref: '#/components/schemas/externalNetwork'
  requestBodies:
    identityRequest:
      description: A request for an identity.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/identityWrite'
          example:
            clusterId: 9361402c-f998-49cc-ab21-9bb99afcfde8
  responses:
    regionsResponse:
      description: A list of regions.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/regions'
          example:
          - metadata:
              id: c7568e2d-f9ab-453d-9a3a-51375f78426b
              name: uk-west
              description: An oxymoronic tier-3 datacenter based in Liverpool.
              creationTime: 2023-07-31T10:45:45Z
              provisioningStatus: provisioned
            spec:
              type: openstack
    imagesResponse:
      description: A list of images that are compatible with this platform.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/images'
          example:
          - metadata:
              id: a64f9269-36e0-4312-b8d1-52d93d569b7b
              name: ubu2204-v1.25.6-gpu-525.85.05-7ced4154
              creationTime: 2023-02-22T12:04:13Z
            spec:
              softwareVersions:
                kubernetes: v1.25.6
              gpuDriver:
                vendor: nvidia
                version: 525.85.05
    flavorsResponse:
      description: A list of flavors.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/flavors'
          example:
          - metadata:
              id: 9a8c6370-4065-4d4a-9da0-7678df40cd9d
              name: g.4.highmem.a100.1g.10gb
              creationTime: 1970-01-01T00:00:00Z
            spec:
              cpus: 4
              disk: 20
              memory: 32
              gpu:
                vendor: nvidia
                model: H100
                count: 1
    identityResponse:
      description: An identity response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/identityRead'
          example:
            metadata:
              id: a64f9269-36e0-4312-b8d1-52d93d569b7b
              name: unused
              organizationId: 9a8c6370-4065-4d4a-9da0-7678df40cd9d
              projectId: e36c058a-8eba-4f5b-91f4-f6ffb983795c
              creationTime: 2024-05-31T14:11:00Z
              provisioningStatus: provisioned
            spec:
              type: openstack
              openstack:
                cloud: default
                cloudConfig: dGhpcyBpcyBhIHRlc3QK
                projectId: eb9c92d937464d14bf87e50fa726380d
                userId: a19678a28126497dba24b54c96a064fa
    externalNetworksResponse:
      description: A list of valid external networks.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/externalNetworks'
          example:
          - id: c3f92716-1fdc-4b7b-906e-4fe0154dfcdf
            name: foo
  securitySchemes:
    oauth2Authentication:
      description: Operation requires OAuth2 bearer token authentication.
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://identity.unikorn-cloud.org/oauth2/v2/authorization
          tokenUrl: https://identity.unikorn-cloud.org/oauth2/v2/token
          scopes: {}
