openapi: 3.0.3
info:
  title: Kubernetes Region Service API
  description: |-
    Cloud region discovery and routing service.
  version: 0.1.1
paths:
  /api/v1/organizations/{organizationID}/regions:
    description: |-
      Regions define a cloud.  This may be geographical or any logical partition.
      Either way this is the primitive that is used to associate metadata such as
      geographical locale, an organisation's reserved blob of compute etc.
      Each region has its own provider associated with it, for example OpenStack, and
      its own set of credentials so things can be scoped to a specific slice of a
      shared cloud through whatever mechanism is available on that cloud provider.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    get:
      description: |-
        List all regions.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/regionsResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/regions/{regionID}/flavors:
    description: Compute flavor services.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/regionIDParameter'
    get:
      description: |-
        Lists all compute flavors that the authenticated user has access to
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/flavorsResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/regions/{regionID}/images:
    description: Compute image services.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/regionIDParameter'
    get:
      description: |-
        Lists all compute images that the authenticated user has access to.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/imagesResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/regions/{regionID}/externalnetworks:
    description: |-
      Allows access to "external networks" for providers that support them.
      While CAPO can infer the external network itself, it craps out -
      as per usual - if more than one is found, wracked with indescision.
      Thus we still need to handle it as a special snowflake.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/regionIDParameter'
    get:
      description: Get a list of external networks.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/externalNetworksResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/identities:
    description: |-
      Managed identity services.  Identities should be single use e.g. a single cluster instance.
      This limits blast radius in the event of a credential leak, or in some cases avoids bugs in
      provisioning software.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    get:
      description: Get all identites scoped to an organization.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/identitiesResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/projects/{projectID}/identities:
    description: |-
      Managed identity services.  Identities should be single use e.g. a single cluster instance.
      This limits blast radius in the event of a credential leak, or in some cases avoids bugs in
      provisioning software.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/projectIDParameter'
    post:
      description: Create a new identity in the region.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/identityRequest'
      responses:
        '201':
          $ref: '#/components/responses/identityResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/projects/{projectID}/identities/{identityID}:
    description: |-
      Managed identity services.  Identities should be single use e.g. a single cluster instance.
      This limits blast radius in the event of a credential leak, or in some cases avoids bugs in
      provisioning software.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/projectIDParameter'
    - $ref: '#/components/parameters/identityIDParameter'
    get:
      description: Get a single identity.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/identityResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    delete:
      description: Delete an identity and any resources associated with it.
      security:
      - oauth2Authentication: []
      responses:
        '202':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/acceptedResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '404':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/notFoundResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/physicalnetworks:
    description: |-
      Manages physical networks.  Physical networks are networks that may be required for
      baremetal node provisioning e.g. a VLAN.  Note that only a single provider network is currently
      supported per identity, as identities are intended to exist per piece of infrastructure.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    get:
      description: List physical networks.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/physicalNetworksResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/projects/{projectID}/identities/{identityID}/physicalnetworks:
    description: |-
      Manages physical networks.  Physical networks are networks that may be required for
      baremetal node provisioning e.g. a VLAN.  Note that only a single provider network is currently
      supported per identity, as identities are intended to exist per piece of infrastructure.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/projectIDParameter'
    - $ref: '#/components/parameters/identityIDParameter'
    post:
      description: Create a new physical network.
      security:
      - oauth2Authentication: []
      requestBody:
        $ref: '#/components/requestBodies/physicalNetworkRequest'
      responses:
        '201':
          $ref: '#/components/responses/physicalNetworkResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
  /api/v1/organizations/{organizationID}/projects/{projectID}/identities/{identityID}/physicalnetworks/{physicalNetworkID}:
    description: |-
      Manages physical networks.  Physical networks are networks that may be required for
      baremetal node provisioning e.g. a VLAN.  Note that only a single provider network is currently
      supported per identity, as identities are intended to exist per piece of infrastructure.
    parameters:
    - $ref: '#/components/parameters/organizationIDParameter'
    - $ref: '#/components/parameters/projectIDParameter'
    - $ref: '#/components/parameters/identityIDParameter'
    - $ref: '#/components/parameters/physicalNetworkIDParameter'
    get:
      description: Get a phyiscal network.
      security:
      - oauth2Authentication: []
      responses:
        '200':
          $ref: '#/components/responses/physicalNetworkResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
    delete:
      description: Delete a new physical network.
      security:
      - oauth2Authentication: []
      responses:
        '202':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/acceptedResponse'
        '400':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/badRequestResponse'
        '401':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/unauthorizedResponse'
        '403':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/forbiddenResponse'
        '500':
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/responses/internalServerErrorResponse'
components:
  parameters:
    organizationIDParameter:
      name: organizationID
      in: path
      description: An organization ID.
      required: true
      schema:
        type: string
    projectIDParameter:
      name: projectID
      in: path
      description: |-
        The project name.
      required: true
      schema:
        $ref: '#/components/schemas/kubernetesNameParameter'
    regionIDParameter:
      name: regionID
      in: path
      description: The region identifier.
      required: true
      schema:
        $ref: '#/components/schemas/kubernetesNameParameter'
    identityIDParameter:
      name: identityID
      in: path
      description: The identity identifier.
      required: true
      schema:
        $ref: '#/components/schemas/kubernetesNameParameter'
    physicalNetworkIDParameter:
      name: physicalNetworkID
      in: path
      description: The physical network identifier.
      required: true
      schema:
        $ref: '#/components/schemas/kubernetesNameParameter'
  schemas:
    kubernetesNameParameter:
      description: A Kubernetes name. Must be a valid DNS containing only lower case characters, numbers or hyphens, start and end with a character or number, and be at most 63 characters in length.
      type: string
      minLength: 1
      maxLength: 63
    regionType:
      description: The region's provider type.
      type: string
      enum:
      - openstack
    regionFeatures:
      description: A set of features the region may provide to clients.
      type: object
      required:
      - physicalNetworks
      properties:
        physicalNetworks:
          description: |
            If set, this indicates that the region supports physical networks and
            one should be provisioned for clusters to use.  The impliciation here is
            the region supports base-metal machines, and these must be provisioned
            on a physical VLAN etc.
          type: boolean
    regionSpec:
      description: Information about the region.
      type: object
      required:
      - type
      - features
      properties:
        type:
          $ref: '#/components/schemas/regionType'
        features:
          $ref: '#/components/schemas/regionFeatures'
    regionRead:
      description: A region.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/resourceReadMetadata'
        spec:
          $ref: '#/components/schemas/regionSpec'
    regions:
      description: A list of regions.
      type: array
      items:
        $ref: '#/components/schemas/regionRead'
    imageVirtualization:
      description: What type of machine the image is for.
      type: string
      enum:
      - virtualized
      - baremetal
      - any
    softwareVersions:
      description: Image preinstalled version version metadata.
      type: object
      properties:
        kubernetes:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/semver'
    gpuVendor:
      description: The GPU vendor.
      type: string
      enum:
      - NVIDIA
      - AMD
    gpuModel:
      description: A GPU model number.
      type: string
    gpuModelList:
      description: A list of GPU model numbers.
      type: array
      items:
        $ref: '#/components/schemas/gpuModel'
    imageGpu:
      description: The GPU driver if installed.
      type: object
      required:
      - vendor
      - driver
      properties:
        vendor:
          $ref: '#/components/schemas/gpuVendor'
        driver:
          description: The GPU driver version, this is vendor specific.
          type: string
        models:
          $ref: '#/components/schemas/gpuModelList'
    imageSpec:
      description: An image.
      type: object
      required:
      - virtualization
      properties:
        virtualization:
          $ref: '#/components/schemas/imageVirtualization'
        softwareVersions:
          $ref: '#/components/schemas/softwareVersions'
        gpu:
          $ref: '#/components/schemas/imageGpu'
    image:
      description: An image.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          type: string
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/staticResourceMetadata'
        spec:
          type: string
          $ref: '#/components/schemas/imageSpec'
    images:
      description: A list of images that are compatible with this platform.
      type: array
      items:
        $ref: '#/components/schemas/image'
    gpuSpec:
      description: GPU specification.
      type: object
      required:
      - vendor
      - model
      - memory
      - count
      properties:
        vendor:
          $ref: '#/components/schemas/gpuVendor'
        model:
          description: A GPU model.
          type: string
        memory:
          description: GPU memory in GiB.
          type: integer
        count:
          description: The number of GPUs available.
          type: integer
    flavorSpec:
      description: A flavor.
      type: object
      required:
      - cpus
      - memory
      - disk
      properties:
        baremetal:
          description: Whether the flavor is for a dedicated machine.
          type: boolean
        cpus:
          description: The number of CPUs.
          type: integer
        cpuFamily:
          description: A free form CPU family description e.g. model number, architecture.
          type: string
        memory:
          description: The amount of memory in GiB.
          type: integer
        disk:
          description: The amount of ephemeral disk in GB.
          type: integer
        gpu:
          $ref: '#/components/schemas/gpuSpec'
    flavor:
      description: A flavor.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/staticResourceMetadata'
        spec:
          $ref: '#/components/schemas/flavorSpec'
    flavors:
      description: A list of flavors.
      type: array
      items:
        $ref: '#/components/schemas/flavor'
    tag:
      description: An arbitrary tag name and value.
      type: object
      required:
      - name
      - value
      properties:
        name:
          description: A unique tag name.
          type: string
        value:
          description: The value of the tag.
          type: string
    tagList:
      description: A list of tags.
      type: array
      items:
        $ref: '#/components/schemas/tag'
    identityWriteSpec:
      description: Request parameters for creating an identity.
      type: object
      required:
      - regionId
      properties:
        tags:
          $ref: '#/components/schemas/tagList'
        regionId:
          description: The region an identity is provisioned in.
          type: string
    identityWrite:
      description: An identity request.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/resourceWriteMetadata'
        spec:
          $ref: '#/components/schemas/identityWriteSpec'
    identitySpecOpenStack:
      description: Everything an OpenStack client needs to function.
      type: object
      properties:
        cloud:
          description: The name of the cloud in the cloud config.
          type: string
        cloudConfig:
          description: A base64 encoded cloud config file.
          type: string
        userId:
          description: User identitifer allocated for the infrastructure.
          type: string
        projectId:
          description: Project identifier allocated for the infrastructure.
          type: string
        serverGroupId:
          description: Server group identifier allocated for the intrastructure.
          type: string
    identitySpec:
      description: |-
        A provider specific identity, while the client can list regions to infer the
        type, we don't requires this and return it with the response.  That can then
        be used in turn to determine which provider specification to examine.
      type: object
      required:
      - type
      - regionId
      properties:
        tags:
          $ref: '#/components/schemas/tagList'
        type:
          $ref: '#/components/schemas/regionType'
        regionId:
          description: The region an identity is provisioned in.
          type: string
        openstack:
          $ref: '#/components/schemas/identitySpecOpenStack'
    identityRead:
      description: A provider specific identity.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/projectScopedResourceReadMetadata'
        spec:
          $ref: '#/components/schemas/identitySpec'
    identitiesRead:
      description: A list of provider specific identities.
      type: array
      items:
        $ref: '#/components/schemas/identityRead'
    ipv4Address:
      description: An IPv4 address.
      type: string
    ipv4AddressList:
      description: A list of IPv4 addresses.
      type: array
      items:
        $ref: "#/components/schemas/ipv4Address"
    physicalNetworkReadSpec:
      description: A phyical network's specification.
      type: object
      required:
      - regionId
      - prefix
      - dnsNameservers
      - type
      properties:
        tags:
          $ref: '#/components/schemas/tagList'
        prefix:
          description: An IPv4 prefix for the network.
          type: string
        dnsNameservers:
          $ref: '#/components/schemas/ipv4AddressList'
        type:
          $ref: '#/components/schemas/regionType'
        regionId:
          description: The region an identity is provisioned in.
          type: string
        openstack:
          $ref: '#/components/schemas/physicalNetworkSpecOpenstack'
    physicalNetworkSpecOpenstack:
      description: An openstack physical network.
      properties:
        vlanId:
          description: The allocated VLAN ID.
          type: integer
        networkId:
          description: The openstack network ID.
          type: string
        subnetId:
          description: The openstack subnet ID.
          type: string
        routerId:
          description: The openstack router ID.
          type: string
    physicalNetworkWriteSpec:
      description: A phyical network's specification.
      type: object
      required:
      - prefix
      - dnsNameservers
      properties:
        tags:
          $ref: '#/components/schemas/tagList'
        prefix:
          description: An IPv4 prefix for the network.
          type: string
        dnsNameservers:
          $ref: '#/components/schemas/ipv4AddressList'
    physicalNetworkWrite:
      description: A physical network request.
      type: object
      required:
      - metadata
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/resourceWriteMetadata'
        spec:
          $ref: '#/components/schemas/physicalNetworkWriteSpec'
    physicalNetworkRead:
      description: A physical network.
      type: object
      required:
      - metadata
      - spec
      properties:
        metadata:
          $ref: 'https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml#/components/schemas/projectScopedResourceReadMetadata'
        spec:
          $ref: '#/components/schemas/physicalNetworkReadSpec'
    physicalNetworksRead:
      description: A list of physical networks.
      type: array
      items:
        $ref: '#/components/schemas/physicalNetworkRead'
    externalNetwork:
      description: An Openstack external network.
      type: object
      required:
      - id
      - name
      properties:
        id:
          description: The resource ID.
          type: string
        name:
          description: The resource name.
          type: string
    externalNetworks:
      description: A list of openstack external networks.
      type: array
      items:
        $ref: '#/components/schemas/externalNetwork'
  requestBodies:
    identityRequest:
      description: A request for an identity.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/identityWrite'
          example:
            metadata:
              name: identity-name
              description: A verbose description
            spec:
              regionId: c7568e2d-f9ab-453d-9a3a-51375f78426b
              tags:
              - name: cluster-id
                value: 9361402c-f998-49cc-ab21-9bb99afcfde8
    physicalNetworkRequest:
      description: A request for a physical network.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/physicalNetworkWrite'
          example:
            metadata:
              name: physical-network-name
              description: A verbose description
            spec:
              tags:
              - name: cluster-id
                value: 9361402c-f998-49cc-ab21-9bb99afcfde8
              prefix: 192.168.0.0/24
              dnsNameservers:
              - 8.8.8.8
  responses:
    regionsResponse:
      description: A list of regions.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/regions'
          example:
          - metadata:
              id: c7568e2d-f9ab-453d-9a3a-51375f78426b
              name: uk-west
              description: An oxymoronic tier-3 datacenter based in Liverpool.
              creationTime: 2023-07-31T10:45:45Z
              provisioningStatus: provisioned
            spec:
              type: openstack
              features:
                physicalNetworks: true
    imagesResponse:
      description: A list of images that are compatible with this platform.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/images'
          example:
          - metadata:
              id: a64f9269-36e0-4312-b8d1-52d93d569b7b
              name: ubu2204-v1.25.6-gpu-525.85.05-7ced4154
              creationTime: 2023-02-22T12:04:13Z
            spec:
              virtualization: virtualized
              softwareVersions:
                kubernetes: v1.25.6
              gpu:
                vendor: NVIDIA
                driver: 525.85.05
                models:
                - A100
                - H100
                - H200
    flavorsResponse:
      description: A list of flavors.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/flavors'
          example:
          - metadata:
              id: 9a8c6370-4065-4d4a-9da0-7678df40cd9d
              name: g.4.highmem.a100.1g.10gb
              creationTime: 1970-01-01T00:00:00Z
            spec:
              cpus: 4
              cpuFamily: Intel Xeon Platinum 8160T (Skylake)
              disk: 20
              memory: 32
              gpu:
                vendor: NVIDIA
                model: H100
                memory: 192
                count: 1
    identityResponse:
      description: An identity response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/identityRead'
          example:
            metadata:
              id: a64f9269-36e0-4312-b8d1-52d93d569b7b
              name: unused
              organizationId: 9a8c6370-4065-4d4a-9da0-7678df40cd9d
              projectId: e36c058a-8eba-4f5b-91f4-f6ffb983795c
              creationTime: 2024-05-31T14:11:00Z
              createdBy: john.doe@acme.com
              provisioningStatus: provisioned
            spec:
              regionId: d891dbf0-0a01-4efc-ae3a-5d77f6d3424b
              type: openstack
              openstack:
                cloud: default
                cloudConfig: dGhpcyBpcyBhIHRlc3QK
                projectId: eb9c92d937464d14bf87e50fa726380d
                userId: a19678a28126497dba24b54c96a064fa
    identitiesResponse:
      description: A list of identites.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/identitiesRead'
          example:
          - metadata:
              id: a64f9269-36e0-4312-b8d1-52d93d569b7b
              name: unused
              organizationId: 9a8c6370-4065-4d4a-9da0-7678df40cd9d
              projectId: e36c058a-8eba-4f5b-91f4-f6ffb983795c
              creationTime: 2024-05-31T14:11:00Z
              createdBy: john.doe@acme.com
              provisioningStatus: provisioned
            spec:
              regionId: d891dbf0-0a01-4efc-ae3a-5d77f6d3424b
              type: openstack
              openstack:
                cloud: default
                cloudConfig: dGhpcyBpcyBhIHRlc3QK
                projectId: eb9c92d937464d14bf87e50fa726380d
                userId: a19678a28126497dba24b54c96a064fa
    physicalNetworkResponse:
      description: A physical network.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/physicalNetworkRead'
          example:
            metadata:
              id: a64f9269-36e0-4312-b8d1-52d93d569b7b
              name: unused
              organizationId: 9a8c6370-4065-4d4a-9da0-7678df40cd9d
              projectId: e36c058a-8eba-4f5b-91f4-f6ffb983795c
              creationTime: 2024-05-31T14:11:00Z
              createdBy: john.doe@acme.com
              provisioningStatus: provisioned
            spec:
              regionId: d891dbf0-0a01-4efc-ae3a-5d77f6d3424b
              prefix: 192.168.0.0/24
              dnsNameservers:
              - 8.8.8.8
              type: openstack
              openstack:
                vlanId: 1024
                networkId: 824e8c4c-5858-4b02-9906-390e34561bf3
    physicalNetworksResponse:
      description: A list of physical networks.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/physicalNetworksRead'
          example:
          - metadata:
              id: a64f9269-36e0-4312-b8d1-52d93d569b7b
              name: unused
              organizationId: 9a8c6370-4065-4d4a-9da0-7678df40cd9d
              projectId: e36c058a-8eba-4f5b-91f4-f6ffb983795c
              creationTime: 2024-05-31T14:11:00Z
              createdBy: john.doe@acme.com
              provisioningStatus: provisioned
            spec:
              regionId: d891dbf0-0a01-4efc-ae3a-5d77f6d3424b
              prefix: 192.168.0.0/24
              dnsNameservers:
              - 8.8.8.8
              type: openstack
              openstack:
                vlanId: 1024
                networkId: 824e8c4c-5858-4b02-9906-390e34561bf3
    externalNetworksResponse:
      description: A list of valid external networks.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/externalNetworks'
          example:
          - id: c3f92716-1fdc-4b7b-906e-4fe0154dfcdf
            name: foo
  securitySchemes:
    oauth2Authentication:
      description: Operation requires OAuth2 bearer token authentication.
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://identity.unikorn-cloud.org/oauth2/v2/authorization
          tokenUrl: https://identity.unikorn-cloud.org/oauth2/v2/token
          scopes: {}
