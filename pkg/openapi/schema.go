// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/unikorn-cloud/core/pkg/openapi"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"u7393wAAAP//+YTfVy0KAQA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
